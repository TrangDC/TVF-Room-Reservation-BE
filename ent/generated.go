// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package ent

import (
	"time"
)

type AssignRoleInput struct {
	WorkEmail string `json:"workEmail"`
	RoleID    string `json:"roleID"`
}

type AuthenticationToken struct {
	AccessToken  string    `json:"accessToken"`
	RefreshToken string    `json:"refreshToken"`
	TokenType    string    `json:"tokenType"`
	ExpiresAt    time.Time `json:"expiresAt"`
	Email        string    `json:"email"`
}

type AvailableRoomResponse struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Color       string  `json:"color"`
	Floor       string  `json:"floor"`
	OfficeID    string  `json:"officeId"`
	Description *string `json:"description,omitempty"`
	ImageURL    *string `json:"imageUrl,omitempty"`
	Status      bool    `json:"status"`
}

type BookingData struct {
	ID        string     `json:"id"`
	Title     string     `json:"title"`
	StartDate time.Time  `json:"startDate"`
	EndDate   time.Time  `json:"endDate"`
	IsRepeat  *bool      `json:"isRepeat,omitempty"`
	Office    *Office    `json:"office"`
	Room      *Room      `json:"room"`
	User      *User      `json:"user"`
	Slug      string     `json:"slug"`
	CreatedAt time.Time  `json:"createdAt"`
	UpdatedAt time.Time  `json:"updatedAt"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
}

type BookingDataResponse struct {
	Total int            `json:"total"`
	Data  []*BookingData `json:"data"`
}

type BookingFilter struct {
	StartDate *string `json:"startDate,omitempty"`
	EndDate   *string `json:"endDate,omitempty"`
	OfficeID  *string `json:"officeId,omitempty"`
	RoomID    *string `json:"roomId,omitempty"`
	Keyword   *string `json:"keyword,omitempty"`
}

type BookingResponse struct {
	Message string       `json:"message"`
	Data    *BookingData `json:"data"`
}

type CreateBookingInput struct {
	Title     string    `json:"title"`
	StartDate time.Time `json:"startDate"`
	EndDate   time.Time `json:"endDate"`
	IsRepeat  *bool     `json:"isRepeat,omitempty"`
	OfficeID  string    `json:"officeId"`
	RoomID    string    `json:"roomId"`
}

type CreateOfficeInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
}

type CreateRoomInput struct {
	Name        string  `json:"name"`
	Color       string  `json:"color"`
	Floor       string  `json:"floor"`
	OfficeID    string  `json:"officeId"`
	Description *string `json:"description,omitempty"`
	ImageURL    *string `json:"imageUrl,omitempty"`
}

type GetAvailableRoomInput struct {
	StartDate string  `json:"startDate"`
	StartTime *string `json:"startTime,omitempty"`
	EndTime   *string `json:"endTime,omitempty"`
	IsRepeat  *bool   `json:"isRepeat,omitempty"`
	EndDate   *string `json:"endDate,omitempty"`
	OfficeID  string  `json:"officeId"`
}

type OfficeDto struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	Rooms       []*Room `json:"rooms"`
}

type OfficeResponse struct {
	Message string  `json:"message"`
	Data    *Office `json:"data"`
}

type PaginationInput struct {
	Page    *int `json:"page,omitempty"`
	PerPage *int `json:"perPage,omitempty"`
}

type RoomDataResponse struct {
	Total int     `json:"total"`
	Data  []*Room `json:"data"`
}

type RoomFilter struct {
	OfficeID   string  `json:"officeId"`
	SearchTerm *string `json:"searchTerm,omitempty"`
}

type RoomResponse struct {
	Message string `json:"message"`
	Data    *Room  `json:"data"`
}

type UnassignRoleInput struct {
	WorkEmail string `json:"workEmail"`
	RoleID    string `json:"roleID"`
}

type UpdateBookingInput struct {
	ID        string     `json:"id"`
	Title     *string    `json:"title,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate   *time.Time `json:"endDate,omitempty"`
	IsRepeat  *bool      `json:"isRepeat,omitempty"`
	OfficeID  *string    `json:"officeId,omitempty"`
	RoomID    *string    `json:"roomId,omitempty"`
}

type UpdateOfficeInput struct {
	ID          string  `json:"id"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
}

type UpdateRoomInput struct {
	ID          string  `json:"id"`
	Name        *string `json:"name,omitempty"`
	Color       *string `json:"color,omitempty"`
	Floor       *string `json:"floor,omitempty"`
	OfficeID    *string `json:"officeId,omitempty"`
	Description *string `json:"description,omitempty"`
	ImageURL    *string `json:"imageUrl,omitempty"`
}

type UserData struct {
	ID        string  `json:"id"`
	Name      string  `json:"name"`
	WorkEmail string  `json:"workEmail"`
	Roles     []*Role `json:"roles"`
}

type UserDataResponse struct {
	Total int         `json:"total"`
	Data  []*UserData `json:"data"`
}

type UserResponse struct {
	Message string    `json:"message"`
	User    *UserData `json:"user"`
}
